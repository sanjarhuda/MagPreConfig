<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
?>


<?php $_helper = $this->helper('catalog/output'); ?>
<?php $_product = $this->getProduct(); ?>
<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>
<div id="messages_product_view"><?php echo $this->getMessagesBlock()->getGroupedHtml() ?></div>

<?php

$ajaxcart = Mage::helper("ExtraConfig")->themeOptions('ajaxcart');
if(Mage::helper("ExtraConfig")->is_mobile() == true) {
    $layout = 'vertical';
} else {
    $layout = Mage::helper("ExtraConfig")->themeOptions('productlayout'); 
    
    $lyt = $_product->getAttributeText('productlayout');
    if($lyt != null){ $layout = $lyt; }
}

if ($layout == 'default')
{
?>

<div class="product-view">
    <div class="product-essential">
    <form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
        <div class="no-display">
            <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
            <input type="hidden" name="related_product" id="related-products-field" value="" />
        </div>
        <div class="view-name">
            <div class="product-name">
                <h1 class="medium"><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?>
		    <div class="sharing-button">
			<?php echo $this->getLayout()->createBlock('sharingtool/share')->setBlockId('addthis_sharetool')->toHtml(); ?>
		    </div>
		</h1>
	    </div>
	    
        </div>
        <div class="default-image product-img-box">
            <?php echo $this->getChildHtml('media') ?>
        </div>
        <div class="default-shop product-shop">
            

            

            <?php echo $this->getReviewsSummaryHtml($_product, false, true)?>
            
            
            
            <?php if ($_product->getShortDescription()):?>
                <div class="short-description">
                    <h2><?php echo $this->__('Quick Overview') ?></h2>
                    <div class="std"><?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?></div>
                </div>
            <?php endif;?>
	    
            
            <?php echo $this->getChildHtml('alert_urls') ?>
            <?php echo $this->getChildHtml('product_type_data') ?>
            <?php echo $this->getTierPriceHtml() ?>
            <?php echo $this->getChildHtml('extrahint') ?>
	    
	    <div class="product_sku">
		<label>SKU :</label>
		<?php echo $this->htmlEscape($_product->getSku()) ?>
	    </div>
            
            <?php if (!$this->hasOptions()):?>
                <div class="add-to-box">
                    <?php if($_product->isSaleable()): ?>
                        <?php echo $this->getChildHtml('addtocart') ?>
                        <?php if( $this->helper('wishlist')->isAllow() || $_compareUrl=$this->helper('catalog/product_compare')->getAddUrl($_product)): ?>
                            <span class="or"><?php echo $this->__('OR') ?></span>
                        <?php endif; ?>
                    <?php endif; ?>
		    <?php echo $this->getChildHtml('addto') ?>
                    
                </div>
		
		
		
                <?php echo $this->getChildHtml('extra_buttons') ?>
            <?php elseif (!$_product->isSaleable()): ?>
                <div class="add-to-box">
                    <?php echo $this->getChilzdHtml('addto') ?>
                </div>
            <?php endif; ?>

            
            <?php if ($_product->isSaleable() && $this->hasOptions()):?>
            <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
	     <?php // echo $this->getChildHtml('addto') ?>
            <?php endif;?>
            
            

            <?php echo $this->getChildHtml('other');?>

            <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
            <?php endif;?>
            
            
            

        </div>

        
        <div class="product-right">
        <?php echo $this->getLayout()->createBlock('cms/block')->setBlockId('detail-block1')->toHtml() ?>
        </div>
        <div class="clearer"></div>
        
    </form>
    <script type="text/javascript">
    //<![CDATA[
     <?php if($ajaxcart == '1' || $ajaxcart == '2') { ?>
        var productAddToCartForm = new VarienForm('product_addtocart_form');
    	productAddToCartForm.submit = function(button, url) {
		if (this.validator.validate()) {
			var form = this.form;
			var oldUrl = form.action;
			if (url) {
				form.action = url;
			}
			var e = null;
			// Start of our new ajax code
			if (!url) {
				url = jQuery('#product_addtocart_form').attr('action');
			}
			url = url.replace("checkout/cart","ajax/index"); // New Code
			var data = jQuery('#product_addtocart_form').serialize();
			data += '&isAjax=1';
			
			jQuery('#ajax_loader').show();
			try {
				jQuery.ajax( {
					url : url,
					dataType : 'json',
					type : 'post',
					data : data,
					
					success : function(data) {
					    //alert("dd");
						jQuery('#ajax_loader').hide();
						if(data.status == 'ERROR'){
							alert(data.message);
						}else{
						    successMessage(data.message);
						    if(jQuery('.block-cart')){
							jQuery('.block-cart').replaceWith(data.sidebar);
						    }
						    if(jQuery('.header .links')){
							jQuery('.header .links').replaceWith(data.toplink);
						    }
						}
					},
					error: function(jqXHR, textStatus, errorThrown) {
						alert("Error posting Data");
					}
				});
			} catch (e) {
			}
			// End of our new ajax code
			this.form.action = oldUrl;
			if (e) {
				throw e;
			}
		}
	}.bind(productAddToCartForm);
	
    productAddToCartForm.submitLight = function(button, url){
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToCartForm);
	
    <?php } else { ?>
	
	var productAddToCartForm = new VarienForm('product_addtocart_form');
        productAddToCartForm.submit = function(button, url) {
            if (this.validator.validate()) {
                var form = this.form;
                var oldUrl = form.action;

                if (url) {
                   form.action = url;
                }
                var e = null;
                try {
                    this.form.submit();
                } catch (e) {
                }
                this.form.action = oldUrl;
                if (e) {
                    throw e;
                }

                if (button && button != 'undefined') {
                    button.disabled = true;
                }
            }
        }.bind(productAddToCartForm);

        productAddToCartForm.submitLight = function(button, url){
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                // Remove custom datetime validators
                for (var methodName in Validation.methods) {
                    if (methodName.match(/^validate-datetime-.*/i)) {
                        delete Validation.methods[methodName];
                    }
                }

                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToCartForm);
	
    <?php } ?>
    //]]>
    </script>
    </div>

     
    
    <div class="product-collateral">
	<div class="tab">
         <?php echo $this->getChildHtml('info_tabs') ?>
	</div>
	<div class="related"> 
	    <?php echo $this->getChildHtml('related'); ?>
	</div>
	<div class="clear"></div>
         <?php echo $this->getChildHtml('upsell_products') ?>
         <?php echo $this->getLayout()->createBlock('cms/block')->setBlockId('detail-block2')->toHtml() ?>
         
    </div>
</div>



<?php
}
elseif ($layout == 'horizontal')
{

?>


<div class="product-view">
    <div class="product-essential">
    <form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
        <div class="no-display">
            <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
            <input type="hidden" name="related_product" id="related-products-field" value="" />
        </div>
        <div class="view-name">
            <div class="product-name">
                <h1 class="medium"><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?>
		<div class="sharing-button">
		    <?php echo $this->getLayout()->createBlock('sharingtool/share')->setBlockId('addthis_sharetool')->toHtml(); ?>
		</div>
		</h1>
            </div>
        </div>
        <div class="horizontal-image product-img-box">
            <?php echo $this->getChildHtml('media') ?>
        </div>
        <div class="horizontal-shop product-shop">
            
            
            

            <?php echo $this->getReviewsSummaryHtml($_product, false, true)?>
            

            
            
            <?php if ($_product->getShortDescription()):?>
                <div class="short-description">
                    <h2><?php echo $this->__('Quick Overview') ?></h2>
                    <div class="std"><?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?></div>
                </div>
            <?php endif;?>
            
            <?php echo $this->getChildHtml('alert_urls') ?>
            <?php echo $this->getChildHtml('product_type_data') ?>
            <?php echo $this->getTierPriceHtml() ?>
            <?php echo $this->getChildHtml('extrahint') ?>
            
            <div class="product_sku">
		<label>SKU :</label>
		<?php echo $this->htmlEscape($_product->getSku()) ?>
	    </div>
	    
            <?php if (!$this->hasOptions()):?>
                <div class="add-to-box">
                    <?php if($_product->isSaleable()): ?>
                        <?php echo $this->getChildHtml('addtocart') ?>
                        <?php if( $this->helper('wishlist')->isAllow() || $_compareUrl=$this->helper('catalog/product_compare')->getAddUrl($_product)): ?>
                            <span class="or"><?php echo $this->__('OR') ?></span>
                        <?php endif; ?>
                    <?php endif; ?>
		    
		    <?php echo $this->getChildHtml('addto') ?>
                    
                </div>
		
		
		
                <?php echo $this->getChildHtml('extra_buttons') ?>
            <?php elseif (!$_product->isSaleable()): ?>
                <div class="add-to-box">
                    <?php echo $this->getChildHtml('addto') ?>
                </div>
            <?php endif; ?>

            
            <?php if ($_product->isSaleable() && $this->hasOptions()):?>
            <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
	     <?php // echo $this->getChildHtml('addto') ?>
            <?php endif;?>
            
            

            <?php echo $this->getChildHtml('other');?>

            <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
            <?php endif;?>
            
            
             

        </div>

        
        
        <div class="clearer"></div>
        
    </form>
    <script type="text/javascript">
    //<![CDATA[
         <?php if($ajaxcart == '1' || $ajaxcart == '2') { ?>
        var productAddToCartForm = new VarienForm('product_addtocart_form');
    	productAddToCartForm.submit = function(button, url) {
		if (this.validator.validate()) {
			var form = this.form;
			var oldUrl = form.action;
			if (url) {
				form.action = url;
			}
			var e = null;
			// Start of our new ajax code
			if (!url) {
				url = jQuery('#product_addtocart_form').attr('action');
			}
			url = url.replace("checkout/cart","ajax/index"); // New Code
			var data = jQuery('#product_addtocart_form').serialize();
			data += '&isAjax=1';
			
			jQuery('#ajax_loader').show();
			try {
				jQuery.ajax( {
					url : url,
					dataType : 'json',
					type : 'post',
					data : data,
					
					success : function(data) {
					    //alert("dd");
						jQuery('#ajax_loader').hide();
						if(data.status == 'ERROR'){
							alert(data.message);
						}else{
						    successMessage(data.message);
						    if(jQuery('.block-cart')){
							jQuery('.block-cart').replaceWith(data.sidebar);
						    }
						    if(jQuery('.header .links')){
							jQuery('.header .links').replaceWith(data.toplink);
						    }
						}
					},
					error: function(jqXHR, textStatus, errorThrown) {
						alert("Error posting Data");
					}
				});
			} catch (e) {
			}
			// End of our new ajax code
			this.form.action = oldUrl;
			if (e) {
				throw e;
			}
		}
	}.bind(productAddToCartForm);
	
    productAddToCartForm.submitLight = function(button, url){
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToCartForm);
	
    <?php } else { ?>
	
	var productAddToCartForm = new VarienForm('product_addtocart_form');
        productAddToCartForm.submit = function(button, url) {
            if (this.validator.validate()) {
                var form = this.form;
                var oldUrl = form.action;

                if (url) {
                   form.action = url;
                }
                var e = null;
                try {
                    this.form.submit();
                } catch (e) {
                }
                this.form.action = oldUrl;
                if (e) {
                    throw e;
                }

                if (button && button != 'undefined') {
                    button.disabled = true;
                }
            }
        }.bind(productAddToCartForm);

        productAddToCartForm.submitLight = function(button, url){
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                // Remove custom datetime validators
                for (var methodName in Validation.methods) {
                    if (methodName.match(/^validate-datetime-.*/i)) {
                        delete Validation.methods[methodName];
                    }
                }

                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToCartForm);
	
    <?php } ?>
    //]]>
    </script>
    </div>

    
    
    <div class="product-collateral">
         <div class="tab">
          <?php echo $this->getChildHtml('info_tabs') ?>
	  </div>
	<div class="related"> 
	    <?php echo $this->getChildHtml('related'); ?>
	</div>
	<div class="clear"></div>
          <?php echo $this->getChildHtml('upsell_products') ?>
         <?php echo $this->getLayout()->createBlock('cms/block')->setBlockId('detail-block2')->toHtml() ?>
    </div>
</div>


<?php
}
elseif ($layout == 'vertical')
{
?>




<div class="product-view">
    <div class="product-essential">
    <form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
        <div class="no-display">
            <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
            <input type="hidden" name="related_product" id="related-products-field" value="" />
        </div>
        <div class="view-name">
            <div class="product-name">
                <h1 class="medium"><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?>
		    <div class="sharing-button">
		    <?php echo $this->getLayout()->createBlock('sharingtool/share')->setBlockId('addthis_sharetool')->toHtml(); ?>
		    </div>
		</h1>
            </div>
        </div>
        <div class="vertical-image product-img-box">
            <?php echo $this->getChildHtml('media') ?>
            
        </div>
        <div class="vertical-shop product-shop">
            
            
            

            <?php echo $this->getReviewsSummaryHtml($_product, false, true)?>
            

            
            
            <?php if ($_product->getShortDescription()):?>
                <div class="short-description">
                    <h2><?php echo $this->__('Quick Overview') ?></h2>
                    <div class="std"><?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?></div>
                </div>
            <?php endif;?>
            
	    <?php echo $this->getChildHtml('alert_urls') ?>
            <?php echo $this->getChildHtml('product_type_data') ?>
            <?php echo $this->getTierPriceHtml() ?>
            <?php echo $this->getChildHtml('extrahint') ?>
            
            <div class="product_sku">
		<label>SKU :</label>
		<?php echo $this->htmlEscape($_product->getSku()) ?>
	    </div>
            
            <?php if (!$this->hasOptions()):?>
                <div class="add-to-box">
                    <?php if($_product->isSaleable()): ?>
                        <?php echo $this->getChildHtml('addtocart') ?>
                        <?php if( $this->helper('wishlist')->isAllow() || $_compareUrl=$this->helper('catalog/product_compare')->getAddUrl($_product)): ?>
                            <span class="or"><?php echo $this->__('OR') ?></span>
                        <?php endif; ?>
                    <?php endif; ?>
                    <?php echo $this->getChildHtml('addto') ?>
                </div>
		
		
		
                <?php echo $this->getChildHtml('extra_buttons') ?>
            <?php elseif (!$_product->isSaleable()): ?>
                <div class="add-to-box">
                    <?php echo $this->getChildHtml('addto') ?>
                </div>
            <?php endif; ?>

            
            <?php if ($_product->isSaleable() && $this->hasOptions()):?>
            <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
	     <?php // echo $this->getChildHtml('addto') ?>
            <?php endif;?>
            
            

            <?php echo $this->getChildHtml('other');?>

            <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
            <?php endif;?>
            
            
             
        </div>

        
        <div class="product-right">
        <?php echo $this->getLayout()->createBlock('cms/block')->setBlockId('detail-block1')->toHtml() ?>
        </div>
        <div class="clearer"></div>
        
    </form>
    <script type="text/javascript">
    //<![CDATA[
         <?php if($ajaxcart == '1' || $ajaxcart == '2') { ?>
        var productAddToCartForm = new VarienForm('product_addtocart_form');
    	productAddToCartForm.submit = function(button, url) {
		if (this.validator.validate()) {
			var form = this.form;
			var oldUrl = form.action;
			if (url) {
				form.action = url;
			}
			var e = null;
			// Start of our new ajax code
			if (!url) {
				url = jQuery('#product_addtocart_form').attr('action');
			}
			url = url.replace("checkout/cart","ajax/index"); // New Code
			var data = jQuery('#product_addtocart_form').serialize();
			data += '&isAjax=1';
			
			jQuery('#ajax_loader').show();
			try {
				jQuery.ajax( {
					url : url,
					dataType : 'json',
					type : 'post',
					data : data,
					
					success : function(data) {
					    //alert("dd");
						jQuery('#ajax_loader').hide();
						if(data.status == 'ERROR'){
							alert(data.message);
						}else{
						    successMessage(data.message);
						    if(jQuery('.block-cart')){
							jQuery('.block-cart').replaceWith(data.sidebar);
						    }
						    if(jQuery('.header .links')){
							jQuery('.header .links').replaceWith(data.toplink);
						    }
						}
					},
					error: function(jqXHR, textStatus, errorThrown) {
						alert("Error posting Data");
					}
				});
			} catch (e) {
			}
			// End of our new ajax code
			this.form.action = oldUrl;
			if (e) {
				throw e;
			}
		}
	}.bind(productAddToCartForm);
	
    productAddToCartForm.submitLight = function(button, url){
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToCartForm);
	
    <?php } else { ?>
	
	var productAddToCartForm = new VarienForm('product_addtocart_form');
        productAddToCartForm.submit = function(button, url) {
            if (this.validator.validate()) {
                var form = this.form;
                var oldUrl = form.action;

                if (url) {
                   form.action = url;
                }
                var e = null;
                try {
                    this.form.submit();
                } catch (e) {
                }
                this.form.action = oldUrl;
                if (e) {
                    throw e;
                }

                if (button && button != 'undefined') {
                    button.disabled = true;
                }
            }
        }.bind(productAddToCartForm);

        productAddToCartForm.submitLight = function(button, url){
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                // Remove custom datetime validators
                for (var methodName in Validation.methods) {
                    if (methodName.match(/^validate-datetime-.*/i)) {
                        delete Validation.methods[methodName];
                    }
                }

                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToCartForm);
	
    <?php } ?>
    //]]>
    </script>
    </div>

    

    
    <div class="product-collateral">
         <div class="tab">
	    <?php echo $this->getChildHtml('info_tabs') ?>
	 </div>
	<div class="related"> 
	    <?php echo $this->getChildHtml('related'); ?>
	</div>
	<div class="clear"></div>
          <?php echo $this->getChildHtml('upsell_products') ?>
         <?php echo $this->getLayout()->createBlock('cms/block')->setBlockId('detail-block2')->toHtml() ?>
    </div>
</div>

<?php
}
elseif ($layout == 'custom1')
{
?>

<div class="product-view">
    <div class="product-essential">
    
        <div class="no-display">
            <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
            <input type="hidden" name="related_product" id="related-products-field" value="" />
        </div>
        <div class="view-name">
            <div class="product-name">
                <h1 class="medium"><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?>
		    <div class="sharing-button">
		    <?php echo $this->getLayout()->createBlock('sharingtool/share')->setBlockId('addthis_sharetool')->toHtml(); ?>
		    </div>
		</h1>
            </div>
        </div>
        <div class="custom1-image product-img-box">
            <?php echo $this->getChildHtml('media') ?>
        </div>
        <div class="custom">
	<form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
        <div class="custom-shop product-shop">
            
            
            

            <?php echo $this->getReviewsSummaryHtml($_product, false, true)?>
            

            
            
            <?php if ($_product->getShortDescription()):?>
                <div class="short-description">
                    <h2><?php echo $this->__('Quick Overview') ?></h2>
                    <div class="std"><?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?></div>
                </div>
            <?php endif;?>
            
	    <?php echo $this->getChildHtml('alert_urls') ?>
            <?php echo $this->getChildHtml('product_type_data') ?>
            <?php echo $this->getTierPriceHtml() ?>
            <?php echo $this->getChildHtml('extrahint') ?>
            
            <div class="product_sku">
		<label>SKU :</label>
		<?php echo $this->htmlEscape($_product->getSku()) ?>
	    </div>
            
            <?php if (!$this->hasOptions()):?>
                <div class="add-to-box">
                    <?php if($_product->isSaleable()): ?>
                        <?php echo $this->getChildHtml('addtocart') ?>
                        <?php if( $this->helper('wishlist')->isAllow() || $_compareUrl=$this->helper('catalog/product_compare')->getAddUrl($_product)): ?>
                            <span class="or"><?php echo $this->__('OR') ?></span>
                        <?php endif; ?>
                    <?php endif; ?>
                    <?php echo $this->getChildHtml('addto') ?>
                </div>
		
		
		
                <?php echo $this->getChildHtml('extra_buttons') ?>
            <?php elseif (!$_product->isSaleable()): ?>
                <div class="add-to-box">
                    <?php echo $this->getChildHtml('addto') ?>
                </div>
            <?php endif; ?>

            
            <?php if ($_product->isSaleable() && $this->hasOptions()):?>
            <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
	     <?php // echo $this->getChildHtml('addto') ?>
            <?php endif;?>
            
            

            <?php echo $this->getChildHtml('other');?>

            <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
            <?php endif;?>
            
            
             

        </div>
	</form>
        <div class="custom-tab">
            <div class="product-collateral">
            <?php echo $this->getChildHtml('info_tabs') ?>
            </div>
        </div>
        </div>
        
        <div class="clearer"></div>
        
    
    <script type="text/javascript">
    //<![CDATA[
         <?php if($ajaxcart == '1' || $ajaxcart == '2') { ?>
        var productAddToCartForm = new VarienForm('product_addtocart_form');
    	productAddToCartForm.submit = function(button, url) {
		if (this.validator.validate()) {
			var form = this.form;
			var oldUrl = form.action;
			if (url) {
				form.action = url;
			}
			var e = null;
			// Start of our new ajax code
			if (!url) {
				url = jQuery('#product_addtocart_form').attr('action');
			}
			url = url.replace("checkout/cart","ajax/index"); // New Code
			var data = jQuery('#product_addtocart_form').serialize();
			data += '&isAjax=1';
			
			jQuery('#ajax_loader').show();
			try {
				jQuery.ajax( {
					url : url,
					dataType : 'json',
					type : 'post',
					data : data,
					
					success : function(data) {
					    //alert("dd");
						jQuery('#ajax_loader').hide();
						if(data.status == 'ERROR'){
							alert(data.message);
						}else{
						    successMessage(data.message);
						    if(jQuery('.block-cart')){
							jQuery('.block-cart').replaceWith(data.sidebar);
						    }
						    if(jQuery('.header .links')){
							jQuery('.header .links').replaceWith(data.toplink);
						    }
						}
					},
					error: function(jqXHR, textStatus, errorThrown) {
						alert("Error posting Data");
					}
				});
			} catch (e) {
			}
			// End of our new ajax code
			this.form.action = oldUrl;
			if (e) {
				throw e;
			}
		}
	}.bind(productAddToCartForm);
	
    productAddToCartForm.submitLight = function(button, url){
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToCartForm);
	
    <?php } else { ?>
	
	var productAddToCartForm = new VarienForm('product_addtocart_form');
        productAddToCartForm.submit = function(button, url) {
            if (this.validator.validate()) {
                var form = this.form;
                var oldUrl = form.action;

                if (url) {
                   form.action = url;
                }
                var e = null;
                try {
                    this.form.submit();
                } catch (e) {
                }
                this.form.action = oldUrl;
                if (e) {
                    throw e;
                }

                if (button && button != 'undefined') {
                    button.disabled = true;
                }
            }
        }.bind(productAddToCartForm);

        productAddToCartForm.submitLight = function(button, url){
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                // Remove custom datetime validators
                for (var methodName in Validation.methods) {
                    if (methodName.match(/^validate-datetime-.*/i)) {
                        delete Validation.methods[methodName];
                    }
                }

                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToCartForm);
	
    <?php } ?>
    //]]>
    </script>
    </div>

    
    
	<div class="related"> 
	    <?php echo $this->getChildHtml('related'); ?>
	</div>
         
          <?php echo $this->getChildHtml('upsell_products') ?>
         
    
</div>


<?php
}
elseif ($layout == 'custom2')
{
?>

<div class="product-view">
    <div class="product-essential">
    <form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
        <div class="no-display">
            <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
            <input type="hidden" name="related_product" id="related-products-field" value="" />
        </div>
        <div class="view-name">
            <div class="product-name">
                <h1 class="medium"><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?>
		    <div class="sharing-button">
		    <?php echo $this->getLayout()->createBlock('sharingtool/share')->setBlockId('addthis_sharetool')->toHtml(); ?>
		    </div>
		</h1>
            </div>
        </div>
        <div class="custom2-image product-img-box">
            <?php echo $this->getChildHtml('media') ?>
            <div style="clear: both;"></div>
        </div>
        
        <div class="custom2-shop product-shop">
            
            
            

            <?php echo $this->getReviewsSummaryHtml($_product, false, true)?>
            

            
            
            <?php if ($_product->getShortDescription()):?>
                <div class="short-description">
                    <h2><?php echo $this->__('Quick Overview') ?></h2>
                    <div class="std"><?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?></div>
                </div>
            <?php endif;?>
            
	    <?php echo $this->getChildHtml('alert_urls') ?>
            <?php echo $this->getChildHtml('product_type_data') ?>
            <?php echo $this->getTierPriceHtml() ?>
            <?php echo $this->getChildHtml('extrahint') ?>
            
            <div class="product_sku">
		<label>SKU :</label>
		<?php echo $this->htmlEscape($_product->getSku()) ?>
	    </div>
            
            <?php if (!$this->hasOptions()):?>
                <div class="add-to-box">
                    <?php if($_product->isSaleable()): ?>
                        <?php echo $this->getChildHtml('addtocart') ?>
                        <?php if( $this->helper('wishlist')->isAllow() || $_compareUrl=$this->helper('catalog/product_compare')->getAddUrl($_product)): ?>
                            <span class="or"><?php echo $this->__('OR') ?></span>
                        <?php endif; ?>
                    <?php endif; ?>
                   <?php echo $this->getChildHtml('addto') ?>
                </div>
		
		 
		
                <?php echo $this->getChildHtml('extra_buttons') ?>
            <?php elseif (!$_product->isSaleable()): ?>
                <div class="add-to-box">
                    <?php echo $this->getChildHtml('addto') ?>
                </div>
            <?php endif; ?>

            
            <?php if ($_product->isSaleable() && $this->hasOptions()):?>
            <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
	     <?php // echo $this->getChildHtml('addto') ?>
            <?php endif;?>
            
            

            <?php echo $this->getChildHtml('other');?>

            <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
            <?php endif;?>
            
        </div>
        
        <div class="clearer"></div>
        
    </form>
    <script type="text/javascript">
    //<![CDATA[
          <?php if($ajaxcart == '1' || $ajaxcart == '2') { ?>
        var productAddToCartForm = new VarienForm('product_addtocart_form');
    	productAddToCartForm.submit = function(button, url) {
		if (this.validator.validate()) {
			var form = this.form;
			var oldUrl = form.action;
			if (url) {
				form.action = url;
			}
			var e = null;
			// Start of our new ajax code
			if (!url) {
				url = jQuery('#product_addtocart_form').attr('action');
			}
			url = url.replace("checkout/cart","ajax/index"); // New Code
			var data = jQuery('#product_addtocart_form').serialize();
			data += '&isAjax=1';
			
			jQuery('#ajax_loader').show();
			try {
				jQuery.ajax( {
					url : url,
					dataType : 'json',
					type : 'post',
					data : data,
					
					success : function(data) {
					    //alert("dd");
						jQuery('#ajax_loader').hide();
						if(data.status == 'ERROR'){
							alert(data.message);
						}else{
						    successMessage(data.message);
						    if(jQuery('.block-cart')){
							jQuery('.block-cart').replaceWith(data.sidebar);
						    }
						    if(jQuery('.header .links')){
							jQuery('.header .links').replaceWith(data.toplink);
						    }
						}
					},
					error: function(jqXHR, textStatus, errorThrown) {
						alert("Error posting Data");
					}
				});
			} catch (e) {
			}
			// End of our new ajax code
			this.form.action = oldUrl;
			if (e) {
				throw e;
			}
		}
	}.bind(productAddToCartForm);
	
    productAddToCartForm.submitLight = function(button, url){
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToCartForm);
	
    <?php } else { ?>
	
	var productAddToCartForm = new VarienForm('product_addtocart_form');
        productAddToCartForm.submit = function(button, url) {
            if (this.validator.validate()) {
                var form = this.form;
                var oldUrl = form.action;

                if (url) {
                   form.action = url;
                }
                var e = null;
                try {
                    this.form.submit();
                } catch (e) {
                }
                this.form.action = oldUrl;
                if (e) {
                    throw e;
                }

                if (button && button != 'undefined') {
                    button.disabled = true;
                }
            }
        }.bind(productAddToCartForm);

        productAddToCartForm.submitLight = function(button, url){
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                // Remove custom datetime validators
                for (var methodName in Validation.methods) {
                    if (methodName.match(/^validate-datetime-.*/i)) {
                        delete Validation.methods[methodName];
                    }
                }

                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToCartForm);
	
    <?php } ?>
    //]]>
    </script>
    </div>

	<div class="product-collateral">
	    <div class="tab">
	     <?php echo $this->getChildHtml('info_tabs') ?>
	    </div>
	    <div class="related"> 
		<?php echo $this->getChildHtml('related'); ?>
	    </div>
	    <div class="clear"></div>
	     <?php echo $this->getChildHtml('upsell_products') ?>
	     <?php echo $this->getLayout()->createBlock('cms/block')->setBlockId('detail-block2')->toHtml() ?>
         
	</div>
         
    
</div>



<?php
}
?>
